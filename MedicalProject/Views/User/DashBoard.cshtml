
@model MedicalProject.Models.DashboardModel

@{
    ViewBag.Title = "DashBoard";
}
@{
    Html.RenderPartial("_SideLayout");
}
<!DOCTYPE html>
<head>
    <script src="https://cdn.anychart.com/releases/8.10.0/js/anychart-core.min.js"></script>
    <script src="https://cdn.anychart.com/releases/8.10.0/js/anychart-pie.min.js"></script>
</head>

<div class="container">
    <div class="content-container">



        <div class="container-fluid">
            <script type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
            <div style="margin-left:180px; margin-top:80px;">
                <div id="product"></div>
                <script type="text/javascript">
        window.onload = function () {
            var chart = new CanvasJS.Chart("product", {
                title: {
                    text: ""
                },
                animationEnabled: true,
                legend: {
                    fontSize: 20,
                    fontFamily: "Helvetica"
                },
                theme: "light2",
               data: [
                {
                    type: "doughnut",
                    indexLabelFontFamily: "Garamond",
                    indexLabelFontSize: 20,
                    indexLabel: "{label} {y}%",
                    startAngle: -20,
                    showInLegend: true,
                       toolTipContent: "{legendText} {y}%",
                        dataPoints: [
                            { y: 10, legendText: "Purchase", label: "Purchase" },
                            { y: 20 , legendText: "Sales", label: "Sales" },
                            { y: 30, legendText: "Products!", label: "Products!" },
                            { y:40, legendText: "Available", label: "Available!" },

                    ],

                    //dataPoints: @Html.Raw(ViewBag.DataPoints),
                }
                ]
            });
            chart.render();
        };

                </script>

            </div>

        </div>

    </div>
</div>







<div class="row" style="margin-top:50px;">
 Left col 
<section class="col-lg-7 connectedSortable" style="align-content:center;">
        <script>
            window.onload = function () {

                CanvasJS.addColorSet("greenShades",
                    [//colorSet Array

                        "Red",
                        "Grey",
                        "Black",
                        "Yellow",
                        "Blue",
                        "Orange"
                    ]);

                var chart = new CanvasJS.Chart("chartContainercategory", {
                    colorSet: "greenShades",
            animationEnabled: true,

            theme: "light2", // "light1", "dark1", "dark2"
            exportEnabled: true,
            title: {
            text: "Category Chart"
            },
            data: [{
            type: "pie",
            dataPoints: @Html.Raw(ViewBag.readdata)
            }]
            });
            chart.render();



            }

        </script>

        <div id="chartContainercategory" style="height: 50%; width: 500px; margin-left:80px; margin-bottom:400px;"></div>
    </section>



</div>
<script>
    var dps = [];

    var chart = new CanvasJS.Chart("chartContainer",
        {
            title: {
                text: "Chart with Date Selector"
            },
            data: [
                {
                    type: "line",
                    dataPoints: randomData(new Date(2017, 0, 1), 400)
                }
            ]
        });
    chart.render();

    var axisXMin = chart.axisX[0].get("minimum");
    var axisXMax = chart.axisX[0].get("maximum");

    function randomData(startX, numberOfY) {
        var xValue, yValue = 0;
        for (var i = 0; i < 400; i += 1) {
            xValue = new Date(startX.getTime() + (i * 24 * 60 * 60 * 1000));
            yValue += (Math.random() * 10 - 5) << 0;

            dps.push({
                x: xValue,
                y: yValue
            });
        }
        return dps;
    }

    $(function () {
        $("#fromDate").val(CanvasJS.formatDate(axisXMin, "DD MMM YYYY"));
        $("#toDate").val(CanvasJS.formatDate(axisXMax, "DD MMM YYYY"));
        $("#fromDate").datepicker({ dateFormat: "d M yy" });
        $("#toDate").datepicker({ dateFormat: "d M yy" });
    });

    $("#date-selector").change(function () {
        var minValue = $("#fromDate").val();
        var maxValue = $("#toDate").val();

        if (new Date(minValue).getTime() < new Date(maxValue).getTime()) {
            chart.axisX[0].set("minimum", new Date(minValue));
            chart.axisX[0].set("maximum", new Date(maxValue));
        }
    });

    $(".period").click(function () {
        var period = this.id;
        var minValue;
        minValue = new Date(axisXMax);

        switch (period) {
            case "1m":
                minValue.setMonth(minValue.getMonth() - 1);
                break;
            case "3m":
                minValue.setMonth(minValue.getMonth() - 3);
                break;
            case "6m":
                minValue.setMonth(minValue.getMonth() - 6);
                break;
            case "1y":
                minValue.setYear(minValue.getFullYear() - 1);
                break;
            default:
                minValue = axisXMin;
        }

        chart.axisX[0].set("minimum", new Date(minValue));
        chart.axisX[0].set("maximum", new Date(axisXMax));
    });
</script>
<div id="update-nav">
    <div id="range-selector">
        <input type="button" id="1m" class="period ui-button" value="1m" />
        <input type="button" id="3m" class="period ui-button" value="3m" />
        <input type="button" id="6m" class="period ui-button" value="6m" />
        <input type="button" id="1y" class="period ui-button" value="1y" />
        <input type="button" id="all" class="period ui-button" value="All" />
    </div>
    <div id="date-selector" class="">
        From:<input type="text" id="fromDate" class="ui-widget">
        To:<input type="text" id="toDate" class="ui-widget">
    </div>
</div>
<br />
<div id="chartContainer" style="height: 360px; width: 100%;"></div>
<style>
    /*  .content-container {
        padding-top: 20px;
    }

    .content-container {
        padding-left: 220px;
    }

    .box-body {
        padding-top: 10px;
        border-style: ridge;
        border-block-color: black;
    }

    .row {
        border-style: ridge;
        border-radius: 2em;
    }

    .col-lg-3 col-xs-6 {
        margin-top: 20px;
        border-style: ridge;
        border-radius: 2em;
    }*/
</style>
@{
    Html.RenderPartial("_salesdata");
}
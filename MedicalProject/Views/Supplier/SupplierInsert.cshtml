@model MedicalProject.Models.Supplier

@{
    ViewBag.Title = "SupplierInsert";
}
@{
    Html.RenderPartial("_SideLayout");
}
<div class="container">
    <div class="content-container">



        <div class="container-fluid">

            <h2></h2>

            @using (Html.BeginForm())
            {
                <div class="container-fluid" style="padding-left:140px; margin-top:20px; margin-left:00px; width:900px;">
                    <div class="row-fluid">
                      
                            <h2 class="form-signin-heading">

                                Supplier
                            </h2>
                            <div class="table" table-layout:auto style="border-block-style:solid">
                                @Html.AntiForgeryToken()

                                <div class="form-horizontal">

                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SupplierAddress, htmlAttributes: new { @class = "control-label col-md-2 " })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.SupplierAddress, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SupplierAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" }, @min = "0" })
                                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">

                                            @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.IFSCCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.IFSCCode, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.IFSCCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.BankAccountNo, htmlAttributes: new { @class = "control-label   col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.BankAccountNo, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                                            @Html.ValidationMessageFor(model => model.BankAccountNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>



                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Create" class="btn btn-success" />
                                        </div>
                                    </div>
                                </div>


                            </div>

                       
                        </div>
                    </div>
            }

            <div>
                @Html.ActionLink("Back to List", "SupplierView")
            </div>


        </div>

        </div>
</div>
<style>
    .content-container {
        padding-top: 20px;
    }

    .content-container {
        padding-left: 220px;
    }
</style>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
